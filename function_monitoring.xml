<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="2" name="pytest" skipped="0" tests="30" time="1106.337"><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="144" name="test_00" time="77.106"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="148" name="test_01" time="48.511"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="152" name="test_02" time="0.002"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="155" name="test_03" time="0.000"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="158" name="test_04" time="0.000"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="161" name="test_05" time="0.000"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="165" name="test_10" time="60.136"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="169" name="test_11" time="69.375"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="173" name="test_12" time="41.505"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="177" name="test_13" time="61.329"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="181" name="test_14" time="0.002"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="184" name="test_15" time="0.001"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="188" name="test_20" time="54.763"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="192" name="test_21" time="45.750"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="196" name="test_22" time="60.584"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="200" name="test_23" time="68.722"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="204" name="test_24" time="0.001"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="207" name="test_25" time="0.001"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="211" name="test_30" time="39.814"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="216" name="test_31" time="79.811"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="221" name="test_32" time="57.698"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="226" name="test_33" time="50.784"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="231" name="test_34" time="0.002"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="234" name="test_35" time="0.002"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="238" name="test_40" time="28.878"><failure message="assert 1 == 0
  -1
  +0">def test_40():
&gt;       assert perform_test(_get_info(proxy.get_layer_regions, &apos;getLayerRegions&apos;, 40, url1[&apos;url&apos;])) == RESULT_OK
E       assert 1 == 0
E         -1
E         +0

tests/function_monitoring.py:240: AssertionError</failure></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="242" name="test_41" time="35.550"><failure message="assert 1 == 0
  -1
  +0">def test_41():
&gt;       assert perform_test(_get_info(proxy.get_layer_regions, &apos;getLayerRegions&apos;, 41, url2[&apos;url&apos;])) == RESULT_OK
E       assert 1 == 0
E         -1
E         +0

tests/function_monitoring.py:244: AssertionError</failure></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="246" name="test_42" time="45.540"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="250" name="test_43" time="77.675"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="254" name="test_44" time="45.874"></testcase><testcase classname="tests.function_monitoring" file="tests/function_monitoring.py" line="258" name="test_45" time="56.654"></testcase></testsuite>